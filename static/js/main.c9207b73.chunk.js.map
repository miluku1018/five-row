{"version":3,"sources":["Square.js","Board.js","Game.js","calculateWinner.js","index.js"],"names":["Button","styled","div","Pink","White","Square","button","value","onClick","BoardRow","Row","Board","squares","map","row","yIndex","col","xIndex","Games","Title","h1","Winner","WinnerName","Next","Info","pinkOrWhite","winner","window","location","reload","Game","useState","Array","fill","board","setBoard","stepPlayed","setStepPlayed","pinkIsNext","setPinkIsNext","currentX","setCurrentX","currentY","setCurrentY","x","y","sum","directionX","directionY","chessInRow","nextX","nextY","calculateWinner","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.c9207b73.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.div`\n  display: table;\n  float: left;\n  margin: 0;\n  width: 25px;\n  height: 25px;\n  background: linear-gradient(\n      to bottom,\n      transparent 48%,\n      #999 48%,\n      #999 52%,\n      transparent 52%\n    ),\n    linear-gradient(\n      to right,\n      transparent 48%,\n      #999 48%,\n      #999 52%,\n      transparent 52%\n    );\n  cursor: pointer;\n  &:hover {\n    background: radial-gradient(\n      circle closest-side at center,\n      #ffc93c,\n      rgba(0, 0, 0, 0)\n    );\n  }\n  &:active {\n    transform: scale(0.98, 0.98);\n  }\n`;\nconst Pink = styled.div`\n  content: \"\";\n  background-color: #ffb0be;\n  width: 20px;\n  height: 20px;\n  border: 0;\n  margin: 2px auto 0;\n  border-radius: 50%;\n  justify-content: center;\n  box-shadow: inset 0 -2px 2px rgba(0, 0, 0, 0.2),\n    inset 2px 0 2px rgba(0, 0, 0, 0.2), inset -2px 0 2px rgba(0, 0, 0, 0.2),\n    inset 0 -2px 2px rgba(0, 0, 0, 0.2), 0 2px 2px 0px #272a27;\n`;\n\nconst White = styled.div`\n  content: \"\";\n  background-color: #fcfcfc;\n  width: 20px;\n  height: 20px;\n  border: 0;\n  margin: 2px auto 0;\n  border-radius: 50%;\n  box-shadow: inset 0 -2px 2px 0 rgba(0, 0, 0, 0.2),\n    inset 2px 0 2px 0 rgba(0, 0, 0, 0.2), inset -2px 0 2px 0 rgba(0, 0, 0, 0.2),\n    inset 0 -2px 2px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0px #272a27;\n`;\nexport default function Square({ value, onClick }) {\n  let button;\n  if (value) {\n    if (value === \"pink\") {\n      button = <Pink />;\n    } else {\n      button = <White />;\n    }\n  }\n  return <Button onClick={onClick}>{button}</Button>;\n}\n","import React from \"react\";\nimport Square from \"./Square\";\nimport styled from \"styled-components\";\n\nconst BoardRow = styled.div`\n  margin: 30px auto;\n  height: 475px;\n  width: 475px;\n  background-color: #eee;\n  box-shadow: inset 0 -3px 3px 0 rgba(0, 0, 0, 0.2),\n    inset 3px 0 3px 0 rgba(0, 0, 0, 0.2), inset -3px 0 3px 0 rgba(0, 0, 0, 0.2),\n    inset 0 -3px 3px 0 rgba(0, 0, 0, 0.2), 0 3px 3px 0px #272a27;\n  border-radius: 5px;\n`;\n\nconst Row = styled.div``;\n\nexport default function Board({ squares, onClick }) {\n  return (\n    <BoardRow>\n      {squares.map((row, yIndex) => (\n        <Row key={yIndex}>\n          {row.map((col, xIndex) => (\n            <Square\n              key={xIndex}\n              value={col}\n              onClick={() => onClick(xIndex, yIndex)}\n            />\n          ))}\n        </Row>\n      ))}\n    </BoardRow>\n  );\n}\n","import React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport styled from \"styled-components\";\nimport calculateWinner from \"./calculateWinner\";\n\nconst Games = styled.div`\n  width: 600px;\n  margin: 0 auto;\n  text-align: center;\n`;\nconst Title = styled.h1`\n  color: darkgreen;\n`;\nconst Winner = styled.div`\n  margin: 5px;\n`;\nconst WinnerName = styled.div`\n  font-size: 40px;\n  color: #ffffff;\n`;\nconst Button = styled.button`\n  display: block;\n  margin-left: 10px;\n  background-color: saddlebrown;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  color: #ffffff;\n  margin: 15px auto;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\nconst Next = styled.div`\n  color: #433e3e;\n  font-size: 20px;\n`;\n\nconst Info = ({ pinkOrWhite, winner }) => (\n  <div>\n    <Title>簡易五子棋</Title>\n    {winner && (\n      <Winner>\n        <Button onClick={() => window.location.reload()}>再玩一次</Button>\n        <WinnerName>贏家：{winner === \"pink\" ? \"粉紅棋\" : \"白棋\"}</WinnerName>\n      </Winner>\n    )}\n    <Next>{pinkOrWhite === \"pink\" ? \"粉紅棋\" : \"白棋\"}</Next>\n  </div>\n);\n\nexport default function Game() {\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\n  const [stepPlayed, setStepPlayed] = useState(0);\n  const [pinkIsNext, setPinkIsNext] = useState(true);\n  const [currentX, setCurrentX] = useState(null);\n  const [currentY, setCurrentY] = useState(null);\n  const pinkOrWhite = pinkIsNext ? \"pink\" : \"white\";\n  const winner = calculateWinner(board, currentX, currentY);\n\n  const handleClickMove = (xIndex, yIndex) => {\n    setCurrentX(xIndex);\n    setCurrentY(yIndex);\n    const squares = [...board];\n\n    if (winner || squares[yIndex][xIndex]) {\n      return;\n    }\n    setBoard(\n      squares.map((row, currentY) => {\n        if (currentY !== yIndex) {\n          return row;\n        }\n        return row.map((col, currentX) => {\n          if (currentX !== xIndex) {\n            return col;\n          }\n          return pinkOrWhite;\n        });\n      })\n    );\n    setStepPlayed(stepPlayed + 1);\n    setPinkIsNext(!pinkIsNext);\n  };\n\n  return (\n    <Games>\n      <Info pinkOrWhite={pinkOrWhite} winner={winner} />\n      <Board squares={board} onClick={handleClickMove} />\n    </Games>\n  );\n}\n","export default function calculateWinner(squares, x, y) {\n  if (x === null || y === null) return;\n  const pinkOrWhite = squares[y][x];\n  let winner;\n  const sum = (pinkOrWhite, x, y, directionX, directionY) => {\n    let chessInRow = 0;\n    let nextX = x;\n    let nextY = y;\n\n    while (chessInRow < 5) {\n      nextX += directionX;\n      nextY += directionY;\n      if (\n        nextX < 0 ||\n        nextX >= 19 ||\n        nextY < 0 ||\n        nextY >= 19 ||\n        squares[nextY][nextX] !== pinkOrWhite\n      )\n        break;\n      chessInRow++;\n    }\n    return chessInRow;\n  };\n\n  if (\n    sum(pinkOrWhite, x, y, 1, 0) + sum(pinkOrWhite, x, y, -1, 0) >= 4 ||\n    sum(pinkOrWhite, x, y, 0, 1) + sum(pinkOrWhite, x, y, 0, -1) >= 4 ||\n    sum(pinkOrWhite, x, y, 1, 1) + sum(pinkOrWhite, x, y, -1, -1) >= 4 ||\n    sum(pinkOrWhite, x, y, -1, 1) + sum(pinkOrWhite, x, y, 1, -1) >= 4\n  ) {\n    winner = pinkOrWhite;\n  }\n  return winner;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./Game\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #e7a5af;\n  }\n`;\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyle />\n    <Game />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}